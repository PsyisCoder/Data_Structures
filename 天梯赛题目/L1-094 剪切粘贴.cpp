/*使用计算机进行文本编辑时常见的功能是剪切功能（快捷键：Ctrl + X）。
请实现一个简单的具有剪切和粘贴功能的文本编辑工具。

工具需要完成一系列剪切后粘贴的操作，每次操作分为两步：

剪切：给定需操作的起始位置和结束位置，将当前字符串中起始位置到结束位
置部分的字符串放入剪贴板中，并删除当前字符串对应位置的内容。例如，当
前字符串为 abcdefg，起始位置为 3，结束位置为 5，则剪贴操作后， 剪贴
板内容为 cde，操作后字符串变为 abfg。字符串位置从 1 开始编号。
粘贴：给定插入位置的前后字符串，寻找到插入位置，将剪贴板内容插入到位
置中，并清除剪贴板内容。例如，对于上面操作后的结果，给定插入位置前为
bf，插入位置后为 g，则插入后变为 abfcdeg。
"如找不到应该插入的位置，则直接将插入位置设置为字符串最后，仍然完成插入操作。查找字符串时区分大小写。"!!!!!
每次操作后的字符串即为新的当前字符串。在若干次操作后，请给出最后的编
辑结果。

输入格式:
输入第一行是一个长度小于等于 200 的字符串 S，表示原始字符串。字符串
只包含所有可见 ASCII 字符，不包含回车与空格。

第二行是一个正整数 N (1≤N≤100)，表示要进行的操作次数。

接下来的 N 行，每行是两个数字和两个长度不大于 5 的不包含空格的非空字
符串，前两个数字表示需要剪切的位置，后两个字符串表示插入位置前和后的
字符串，用一个空格隔开。如果有多个可插入的位置，选择最靠近当前操作字
符串开头的一个。

剪切的位置保证总是合法的。

输出格式:
输出一行，表示操作后的字符串。

输入样例:
AcrosstheGreatWall,wecanreacheverycornerintheworld
5
10 18 ery cor
32 40 , we
1 6 tW all
14 18 rnerr eache
1 1 e r

输出样例:
he,allcornetrrwecaneacheveryGreatWintheworldAcross
*/




//题解：

#include<bits/stdc++.h>
using namespace std;
int main() {
	string s, s1, s2;
	cin >> s;
	int n, a, b;
	cin >> n;
	while (n--) {
		cin >> a >> b >> s1 >> s2;
		a--; b--;    //由于字符串数组的下标是从0开始，即需要减一
		string cp = s.substr(a, b - a + 1), ss = s1 + s2;    //ss用来判断是否有插入位置的
		s.erase(a, b - a + 1);    //将剪切位置的内容删掉
		int ii = s.find(ss);    //找插入位置是否存在
		if (ii == -1)    //如果没找到，s.find()返回-1
			s += cp;    //+：代表拼接字符串，s = s + cp;即将剪切板上的字符拼接到s后面
		else {    //如果找到，s.find()返回找到子串位置的第一个字符的地方
			string tmp = s.substr(0, ii);    //插入位置前的子串
			tmp += s1;    //将插入位置前的标志子串插入
			tmp += cp;    //将剪切的字符串插入
			tmp += s.substr(ii + s1.length(), s.length() - ii - s1.length()); //插入后面还剩下的
			s = tmp;
		}
	}
	cout << s << endl;

	return 0;
}